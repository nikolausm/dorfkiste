services:
  nginx:
    image: nginx:alpine
    container_name: dorfkiste-nginx
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - dorfkiste-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dorfkiste-backend
    expose:
      - "8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/dorfkiste.db
      - Jwt__Secret=${JWT_SECRET:-your-secret-key-min-32-characters-long-for-production}
      - Jwt__Issuer=DorfkisteAPI
      - Jwt__Audience=DorfkisteClient
      - Jwt__ExpiryMinutes=60
      - OpenAI__ApiKey=${OPENAI_API_KEY}
      - OpenAI__Model=gpt-4o
    volumes:
      - backend-data:/app/data
    networks:
      - dorfkiste-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=/api
    container_name: dorfkiste-frontend
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api
    depends_on:
      - backend
    networks:
      - dorfkiste-network
    restart: unless-stopped

volumes:
  backend-data:
    driver: local

networks:
  dorfkiste-network:
    driver: bridge
