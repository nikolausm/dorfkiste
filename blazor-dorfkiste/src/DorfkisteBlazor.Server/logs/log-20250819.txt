2025-08-19 22:10:32.319 +02:00 [WRN] No store type was specified for the decimal property 'Amount' on entity type 'Payout'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:10:32.346 +02:00 [WRN] No store type was specified for the decimal property 'PlatformFeePercentage' on entity type 'PlatformSettings'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:11:29.930 +02:00 [WRN] No store type was specified for the decimal property 'Amount' on entity type 'Payout'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:11:29.977 +02:00 [WRN] No store type was specified for the decimal property 'PlatformFeePercentage' on entity type 'PlatformSettings'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:12:00.074 +02:00 [ERR] An error occurred while migrating or seeding the database.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Server/Program.cs:line 152
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:12:00.106 +02:00 [INF] Database seeding service starting...
2025-08-19 22:12:00.151 +02:00 [ERR] An error occurred during database seeding
System.InvalidOperationException: Unable to resolve service for type 'Microsoft.AspNetCore.Identity.UserManager`1[DorfkisteBlazor.Infrastructure.Identity.ApplicationUser]' while attempting to activate 'DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 30
2025-08-19 22:12:00.206 +02:00 [ERR] Hosting failed to start
System.InvalidOperationException: Unable to resolve service for type 'Microsoft.AspNetCore.Identity.UserManager`1[DorfkisteBlazor.Infrastructure.Identity.ApplicationUser]' while attempting to activate 'DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 30
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-08-19 22:20:48.674 +02:00 [WRN] No store type was specified for the decimal property 'Amount' on entity type 'Payout'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:20:48.701 +02:00 [WRN] No store type was specified for the decimal property 'PlatformFeePercentage' on entity type 'PlatformSettings'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:21:18.708 +02:00 [ERR] An error occurred while migrating or seeding the database.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Server/Program.cs:line 152
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:21:18.732 +02:00 [INF] Database seeding service starting...
2025-08-19 22:21:18.734 +02:00 [ERR] An error occurred during database seeding
System.InvalidOperationException: Unable to resolve service for type 'Microsoft.AspNetCore.Identity.RoleManager`1[Microsoft.AspNetCore.Identity.IdentityRole]' while attempting to activate 'DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 30
2025-08-19 22:21:18.735 +02:00 [ERR] Hosting failed to start
System.InvalidOperationException: Unable to resolve service for type 'Microsoft.AspNetCore.Identity.RoleManager`1[Microsoft.AspNetCore.Identity.IdentityRole]' while attempting to activate 'DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 30
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-08-19 22:26:30.594 +02:00 [WRN] No store type was specified for the decimal property 'Amount' on entity type 'Payout'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:26:30.624 +02:00 [WRN] No store type was specified for the decimal property 'PlatformFeePercentage' on entity type 'PlatformSettings'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:27:00.461 +02:00 [ERR] An error occurred while migrating or seeding the database.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Server/Program.cs:line 152
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:27:00.478 +02:00 [INF] Database seeding service starting...
2025-08-19 22:27:00.482 +02:00 [INF] Starting database seeding...
2025-08-19 22:27:00.487 +02:00 [ERR] An error occurred while seeding the database
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 42
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:27:00.489 +02:00 [ERR] An error occurred during database seeding
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 42
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 32
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:27:00.490 +02:00 [ERR] Hosting failed to start
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 42
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 32
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:27:55.323 +02:00 [WRN] No store type was specified for the decimal property 'Amount' on entity type 'Payout'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:27:55.351 +02:00 [WRN] No store type was specified for the decimal property 'PlatformFeePercentage' on entity type 'PlatformSettings'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-19 22:28:25.193 +02:00 [ERR] An error occurred while migrating or seeding the database.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Server/Program.cs:line 152
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:28:25.210 +02:00 [INF] Database seeding service starting...
2025-08-19 22:28:25.213 +02:00 [INF] Starting database seeding...
2025-08-19 22:28:25.218 +02:00 [ERR] An error occurred while seeding the database
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 42
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:28:25.220 +02:00 [ERR] An error occurred during database seeding
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 42
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 32
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:28:25.221 +02:00 [ERR] Hosting failed to start
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): nodename nor servname provided, or not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.GetHostAddresses(String hostNameOrAddress, AddressFamily family)
   at Microsoft.Data.SqlClient.SNI.SNICommon.GetDnsIpAddresses(String serverName)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.Connect(String serverName, Int32 port, TimeSpan timeout, Boolean isInfiniteTimeout, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle..ctor(String serverName, Int32 port, Int64 timerExpire, Boolean parallel, SqlConnectionIPAddressPreference ipPreference, String cachedFQDN, SQLDNSInfo& pendingDNSInfo, Boolean tlsFirst, String hostNameInCertificate, String serverCertificateFilename)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(CancellationToken cancellationToken)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 42
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 32
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2025-08-19 22:28:57.981 +02:00 [INF] User profile is available. Using '/Users/michaelnikolaus/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-08-19 22:28:58.519 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2025-08-19 22:28:58.547 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-08-19 22:28:58.552 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-08-19 22:28:58.554 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-19 22:28:58.559 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-08-19 22:28:58.575 +02:00 [INF] Database seeding service starting...
2025-08-19 22:28:58.577 +02:00 [INF] Starting database seeding...
2025-08-19 22:28:58.582 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-08-19 22:28:58.657 +02:00 [ERR] Failed executing DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 5)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-08-19 22:28:58.663 +02:00 [ERR] An exception occurred while iterating over the results of a query for context type 'DorfkisteBlazor.Infrastructure.Data.ApplicationDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetRoles'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetRoles'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2025-08-19 22:28:58.664 +02:00 [ERR] An error occurred while seeding the database
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetRoles'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(String roleName)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedRolesAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 71
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 45
2025-08-19 22:28:58.666 +02:00 [ERR] An error occurred during database seeding
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetRoles'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(String roleName)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedRolesAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 71
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 45
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 32
2025-08-19 22:28:58.668 +02:00 [ERR] Hosting failed to start
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetRoles'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(String roleName)
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedRolesAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 71
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeeder.SeedAsync() in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeeder.cs:line 45
   at DorfkisteBlazor.Infrastructure.Data.Seeding.DatabaseSeedingService.ExecuteAsync(CancellationToken stoppingToken) in /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Infrastructure/Data/Seeding/DatabaseSeedingService.cs:line 32
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-08-19 22:33:40.089 +02:00 [INF] User profile is available. Using '/Users/michaelnikolaus/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-08-19 22:33:40.507 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-08-19 22:33:40.511 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-08-19 22:33:40.516 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-19 22:33:40.521 +02:00 [INF] Applying migration '20250819202958_InitialCreate_SQLite'.
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY,
    "Name" TEXT NULL,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "DisplayName" TEXT NULL,
    "DateOfBirth" TEXT NULL,
    "ProfilePictureUrl" TEXT NULL,
    "IsActive" INTEGER NOT NULL,
    "CreatedAt" TEXT NOT NULL,
    "LastLoginAt" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "RefreshTokenExpiryTime" TEXT NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Categories" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Categories" PRIMARY KEY,
    "Name" TEXT NOT NULL,
    "Slug" TEXT NOT NULL,
    "Description" TEXT NULL,
    "Icon" TEXT NULL,
    "IconUrl" TEXT NULL,
    "CreatedAt" TEXT NOT NULL DEFAULT (GETUTCDATE()),
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL DEFAULT 1,
    "IsDeleted" INTEGER NOT NULL DEFAULT 0,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "PlatformSettings" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_PlatformSettings" PRIMARY KEY,
    "PlatformFeePercentage" TEXT NOT NULL,
    "StripeSecretKey" TEXT NULL,
    "StripePublishableKey" TEXT NULL,
    "StripeWebhookSecret" TEXT NULL,
    "PaypalClientId" TEXT NULL,
    "PaypalClientSecret" TEXT NULL,
    "PaypalMode" TEXT NOT NULL,
    "CreatedAt" TEXT NOT NULL,
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL,
    "IsDeleted" INTEGER NOT NULL,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "Email" TEXT NOT NULL,
    "Password" TEXT NULL,
    "Name" TEXT NULL,
    "AvatarUrl" TEXT NULL,
    "Bio" TEXT NULL,
    "Verified" INTEGER NOT NULL DEFAULT 0,
    "IsAdmin" INTEGER NOT NULL DEFAULT 0,
    "StripeCustomerId" TEXT NULL,
    "PaypalEmail" TEXT NULL,
    "CreatedAt" TEXT NOT NULL DEFAULT (GETUTCDATE()),
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL DEFAULT 1,
    "IsDeleted" INTEGER NOT NULL DEFAULT 0,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" TEXT NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" TEXT NOT NULL,
    "RoleId" TEXT NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" TEXT NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Items" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Items" PRIMARY KEY,
    "Title" TEXT NOT NULL,
    "Description" TEXT NULL,
    "Condition" TEXT NOT NULL,
    "PricePerDay" TEXT NULL,
    "PricePerHour" TEXT NULL,
    "Deposit" TEXT NULL,
    "Available" INTEGER NOT NULL DEFAULT 1,
    "Location" TEXT NOT NULL,
    "Latitude" REAL NULL,
    "Longitude" REAL NULL,
    "DeliveryAvailable" INTEGER NOT NULL DEFAULT 0,
    "DeliveryFee" TEXT NULL,
    "DeliveryRadius" REAL NULL,
    "DeliveryDetails" TEXT NULL,
    "PickupAvailable" INTEGER NOT NULL DEFAULT 1,
    "UserId" TEXT NOT NULL,
    "CategoryId" TEXT NOT NULL,
    "CreatedAt" TEXT NOT NULL DEFAULT (GETUTCDATE()),
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL DEFAULT 1,
    "IsDeleted" INTEGER NOT NULL DEFAULT 0,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL,
    CONSTRAINT "FK_Items_Categories_CategoryId" FOREIGN KEY ("CategoryId") REFERENCES "Categories" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_Items_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "PasswordResetTokens" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_PasswordResetTokens" PRIMARY KEY,
    "Token" TEXT NOT NULL,
    "ExpiresAt" TEXT NOT NULL,
    "UserId" TEXT NOT NULL,
    "CreatedAt" TEXT NOT NULL,
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL,
    "IsDeleted" INTEGER NOT NULL,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL,
    CONSTRAINT "FK_PasswordResetTokens_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Payouts" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Payouts" PRIMARY KEY,
    "Amount" TEXT NOT NULL,
    "Currency" TEXT NOT NULL,
    "Status" TEXT NOT NULL,
    "Method" TEXT NOT NULL,
    "StripePayoutId" TEXT NULL,
    "PaypalPayoutId" TEXT NULL,
    "ProcessedAt" TEXT NULL,
    "UserId" TEXT NOT NULL,
    "CreatedAt" TEXT NOT NULL,
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL,
    "IsDeleted" INTEGER NOT NULL,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL,
    CONSTRAINT "FK_Payouts_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-08-19 22:33:40.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ItemImages" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_ItemImages" PRIMARY KEY,
    "Url" TEXT NOT NULL,
    "Order" INTEGER NOT NULL,
    "ItemId" TEXT NOT NULL,
    "CreatedAt" TEXT NOT NULL,
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL,
    "IsDeleted" INTEGER NOT NULL,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL,
    CONSTRAINT "FK_ItemImages_Items_ItemId" FOREIGN KEY ("ItemId") REFERENCES "Items" ("Id") ON DELETE CASCADE
);
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Rentals" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Rentals" PRIMARY KEY,
    "StartDate" TEXT NOT NULL,
    "EndDate" TEXT NOT NULL,
    "TotalPrice" TEXT NOT NULL,
    "DepositPaid" TEXT NOT NULL,
    "PlatformFee" TEXT NOT NULL DEFAULT '0.0',
    "Status" TEXT NOT NULL,
    "PaymentStatus" TEXT NOT NULL DEFAULT 'pending',
    "PaymentMethod" TEXT NULL,
    "StripePaymentIntentId" TEXT NULL,
    "PaypalOrderId" TEXT NULL,
    "DeliveryRequested" INTEGER NOT NULL DEFAULT 0,
    "DeliveryAddress" TEXT NULL,
    "DeliveryFee" TEXT NULL,
    "ItemId" TEXT NOT NULL,
    "OwnerId" TEXT NOT NULL,
    "RenterId" TEXT NOT NULL,
    "CreatedAt" TEXT NOT NULL DEFAULT (GETUTCDATE()),
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL DEFAULT 1,
    "IsDeleted" INTEGER NOT NULL DEFAULT 0,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL,
    CONSTRAINT "CK_Rentals_DepositPaid_NonNegative" CHECK ([DepositPaid] >= 0),
    CONSTRAINT "CK_Rentals_EndDate_AfterStartDate" CHECK ([EndDate] > [StartDate]),
    CONSTRAINT "CK_Rentals_PlatformFee_NonNegative" CHECK ([PlatformFee] >= 0),
    CONSTRAINT "CK_Rentals_TotalPrice_Positive" CHECK ([TotalPrice] >= 0),
    CONSTRAINT "FK_Rentals_Items_ItemId" FOREIGN KEY ("ItemId") REFERENCES "Items" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_Rentals_Users_OwnerId" FOREIGN KEY ("OwnerId") REFERENCES "Users" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_Rentals_Users_RenterId" FOREIGN KEY ("RenterId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "WatchlistItems" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_WatchlistItems" PRIMARY KEY,
    "UserId" TEXT NOT NULL,
    "ItemId" TEXT NOT NULL,
    "CreatedAt" TEXT NOT NULL,
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL,
    "IsDeleted" INTEGER NOT NULL,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL,
    CONSTRAINT "FK_WatchlistItems_Items_ItemId" FOREIGN KEY ("ItemId") REFERENCES "Items" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_WatchlistItems_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Messages" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Messages" PRIMARY KEY,
    "Content" TEXT NOT NULL,
    "Read" INTEGER NOT NULL,
    "SenderId" TEXT NOT NULL,
    "RentalId" TEXT NOT NULL,
    "CreatedAt" TEXT NOT NULL,
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL,
    "IsDeleted" INTEGER NOT NULL,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL,
    CONSTRAINT "FK_Messages_Rentals_RentalId" FOREIGN KEY ("RentalId") REFERENCES "Rentals" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Messages_Users_SenderId" FOREIGN KEY ("SenderId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Payments" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Payments" PRIMARY KEY,
    "Amount" TEXT NOT NULL,
    "Currency" TEXT NOT NULL,
    "Status" TEXT NOT NULL,
    "Type" TEXT NOT NULL,
    "Method" TEXT NOT NULL,
    "StripePaymentIntentId" TEXT NULL,
    "PaypalPaymentId" TEXT NULL,
    "Metadata" TEXT NULL,
    "PaypalOrderId" TEXT NULL,
    "PaymentMethod" TEXT NOT NULL,
    "UserId" TEXT NOT NULL,
    "RentalId" TEXT NULL,
    "CreatedAt" TEXT NOT NULL,
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL,
    "IsDeleted" INTEGER NOT NULL,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL,
    CONSTRAINT "FK_Payments_Rentals_RentalId" FOREIGN KEY ("RentalId") REFERENCES "Rentals" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_Payments_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Reviews" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Reviews" PRIMARY KEY,
    "Rating" INTEGER NOT NULL,
    "Comment" TEXT NULL,
    "RentalId" TEXT NOT NULL,
    "ReviewerId" TEXT NOT NULL,
    "ReviewedId" TEXT NOT NULL,
    "RevieweeId" TEXT NOT NULL,
    "CreatedAt" TEXT NOT NULL,
    "UpdatedAt" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "UpdatedBy" TEXT NULL,
    "IsActive" INTEGER NOT NULL,
    "IsDeleted" INTEGER NOT NULL,
    "DeletedAt" TEXT NULL,
    "DeletedBy" TEXT NULL,
    "RowVersion" BLOB NULL,
    CONSTRAINT "FK_Reviews_Rentals_RentalId" FOREIGN KEY ("RentalId") REFERENCES "Rentals" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Reviews_Users_ReviewedId" FOREIGN KEY ("ReviewedId") REFERENCES "Users" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_Reviews_Users_ReviewerId" FOREIGN KEY ("ReviewerId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Categories_IsActive" ON "Categories" ("IsActive");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Categories_IsDeleted" ON "Categories" ("IsDeleted");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Categories_Name" ON "Categories" ("Name");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Categories_Slug" ON "Categories" ("Slug");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ItemImages_ItemId" ON "ItemImages" ("ItemId");
2025-08-19 22:33:40.565 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_Available" ON "Items" ("Available");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_Available_Active_NotDeleted" ON "Items" ("Available", "IsActive", "IsDeleted");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_Category_Available_Active" ON "Items" ("CategoryId", "Available", "IsActive");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_CategoryId" ON "Items" ("CategoryId");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_CategoryId_Available" ON "Items" ("CategoryId", "Available");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_CreatedAt" ON "Items" ("CreatedAt");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_IsActive" ON "Items" ("IsActive");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_IsDeleted" ON "Items" ("IsDeleted");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_Latitude_Longitude" ON "Items" ("Latitude", "Longitude");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_Location" ON "Items" ("Location");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_UserId" ON "Items" ("UserId");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Items_UserId_Available" ON "Items" ("UserId", "Available");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Messages_RentalId" ON "Messages" ("RentalId");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Messages_SenderId" ON "Messages" ("SenderId");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_PasswordResetTokens_UserId" ON "PasswordResetTokens" ("UserId");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Payments_PaypalPaymentId" ON "Payments" ("PaypalPaymentId");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Payments_RentalId" ON "Payments" ("RentalId");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Payments_StripePaymentIntentId" ON "Payments" ("StripePaymentIntentId");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Payments_UserId_Status" ON "Payments" ("UserId", "Status");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Payouts_UserId" ON "Payouts" ("UserId");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_CreatedAt" ON "Rentals" ("CreatedAt");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_IsActive" ON "Rentals" ("IsActive");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_IsDeleted" ON "Rentals" ("IsDeleted");
2025-08-19 22:33:40.566 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_ItemId" ON "Rentals" ("ItemId");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_ItemId_Status" ON "Rentals" ("ItemId", "Status");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_Owner_Status_StartDate" ON "Rentals" ("OwnerId", "Status", "StartDate");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_OwnerId" ON "Rentals" ("OwnerId");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_OwnerId_Status" ON "Rentals" ("OwnerId", "Status");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_PaymentStatus" ON "Rentals" ("PaymentStatus");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_Renter_Status_StartDate" ON "Rentals" ("RenterId", "Status", "StartDate");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_RenterId" ON "Rentals" ("RenterId");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_RenterId_Status" ON "Rentals" ("RenterId", "Status");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_StartDate_EndDate" ON "Rentals" ("StartDate", "EndDate");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_Status" ON "Rentals" ("Status");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rentals_Status_Active_NotDeleted" ON "Rentals" ("Status", "IsActive", "IsDeleted");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Reviews_RentalId" ON "Reviews" ("RentalId");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Reviews_ReviewedId" ON "Reviews" ("ReviewedId");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Reviews_ReviewerId" ON "Reviews" ("ReviewerId");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Users_CreatedAt" ON "Users" ("CreatedAt");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Users_Email" ON "Users" ("Email");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Users_IsActive" ON "Users" ("IsActive");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Users_IsDeleted" ON "Users" ("IsDeleted");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_WatchlistItems_ItemId" ON "WatchlistItems" ("ItemId");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_WatchlistItems_UserId" ON "WatchlistItems" ("UserId");
2025-08-19 22:33:40.567 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250819202958_InitialCreate_SQLite', '8.0.1');
2025-08-19 22:33:40.587 +02:00 [INF] Database seeding service starting...
2025-08-19 22:33:40.590 +02:00 [INF] Starting database seeding...
2025-08-19 22:33:40.594 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "type" = 'table' AND "rootpage" IS NOT NULL;
2025-08-19 22:33:40.670 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 5)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-08-19 22:33:40.674 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 5)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-08-19 22:33:40.719 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (Size = 5), @p3='?' (Size = 5)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (@p0, @p1, @p2, @p3);
2025-08-19 22:33:40.721 +02:00 [INF] Created role: Admin
2025-08-19 22:33:40.721 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-08-19 22:33:40.721 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-08-19 22:33:40.722 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (Size = 4), @p3='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (@p0, @p1, @p2, @p3);
2025-08-19 22:33:40.722 +02:00 [INF] Created role: User
2025-08-19 22:33:40.722 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 9)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-08-19 22:33:40.722 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 9)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-08-19 22:33:40.723 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (Size = 9), @p3='?' (Size = 9)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (@p0, @p1, @p2, @p3);
2025-08-19 22:33:40.723 +02:00 [INF] Created role: Moderator
2025-08-19 22:33:40.728 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Categories" AS "c"
    WHERE NOT ("c"."IsDeleted"))
2025-08-19 22:33:40.741 +02:00 [INF] Seeded 8 categories
2025-08-19 22:33:40.743 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS "u"
    WHERE NOT ("u"."IsDeleted"))
2025-08-19 22:33:40.787 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 19)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:40.792 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 19)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:40.815 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Int32), @p2='?' (Size = 36), @p3='?' (DbType = DateTime), @p4='?' (DbType = DateTime), @p5='?', @p6='?' (Size = 19), @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTime), @p11='?', @p12='?' (DbType = Boolean), @p13='?' (DbType = DateTimeOffset), @p14='?' (Size = 19), @p15='?' (Size = 19), @p16='?' (Size = 84), @p17='?', @p18='?' (DbType = Boolean), @p19='?', @p20='?', @p21='?' (DbType = DateTime), @p22='?' (Size = 32), @p23='?' (DbType = Boolean), @p24='?' (Size = 19)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "CreatedAt", "DateOfBirth", "DisplayName", "Email", "EmailConfirmed", "FirstName", "IsActive", "LastLoginAt", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "ProfilePictureUrl", "RefreshToken", "RefreshTokenExpiryTime", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24);
2025-08-19 22:33:40.816 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 47), @p6='?' (Size = 5), @p7='?', @p8='?' (Size = 17), @p9='?' (Size = 15), @p10='?' (DbType = DateTime), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Id", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Description", "Icon", "IconUrl", "Name", "Slug", "UpdatedAt", "UpdatedBy")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "IsActive", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.818 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 56), @p6='?' (Size = 8), @p7='?', @p8='?' (Size = 11), @p9='?' (Size = 11), @p10='?' (DbType = DateTime), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Id", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Description", "Icon", "IconUrl", "Name", "Slug", "UpdatedAt", "UpdatedBy")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "IsActive", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.818 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 47), @p6='?' (Size = 3), @p7='?', @p8='?' (Size = 8), @p9='?' (Size = 8), @p10='?' (DbType = DateTime), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Id", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Description", "Icon", "IconUrl", "Name", "Slug", "UpdatedAt", "UpdatedBy")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "IsActive", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.818 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 51), @p6='?' (Size = 5), @p7='?', @p8='?' (Size = 16), @p9='?' (Size = 14), @p10='?' (DbType = DateTime), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Id", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Description", "Icon", "IconUrl", "Name", "Slug", "UpdatedAt", "UpdatedBy")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "IsActive", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.818 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 30), @p6='?' (Size = 7), @p7='?', @p8='?' (Size = 21), @p9='?' (Size = 19), @p10='?' (DbType = DateTime), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Id", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Description", "Icon", "IconUrl", "Name", "Slug", "UpdatedAt", "UpdatedBy")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "IsActive", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.818 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 44), @p6='?' (Size = 5), @p7='?', @p8='?' (Size = 14), @p9='?' (Size = 12), @p10='?' (DbType = DateTime), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Id", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Description", "Icon", "IconUrl", "Name", "Slug", "UpdatedAt", "UpdatedBy")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "IsActive", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.819 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 38), @p6='?' (Size = 4), @p7='?', @p8='?' (Size = 13), @p9='?' (Size = 11), @p10='?' (DbType = DateTime), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Id", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Description", "Icon", "IconUrl", "Name", "Slug", "UpdatedAt", "UpdatedBy")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "IsActive", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.819 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 37), @p6='?' (Size = 4), @p7='?', @p8='?' (Size = 13), @p9='?' (Size = 11), @p10='?' (DbType = DateTime), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Categories" ("Id", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Description", "Icon", "IconUrl", "Name", "Slug", "UpdatedAt", "UpdatedBy")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "IsActive", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.823 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 5)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:40.834 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."UserId", "a"."RoleId"
FROM "AspNetUserRoles" AS "a"
WHERE "a"."UserId" = @__get_Item_0 AND "a"."RoleId" = @__get_Item_1
LIMIT 1
2025-08-19 22:33:40.835 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 5)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:40.839 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 19)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:40.839 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 19)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:40.844 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
2025-08-19 22:33:40.845 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p24='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 36), @p25='?' (Size = 36), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 19), @p6='?' (DbType = Boolean), @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Boolean), @p12='?' (DbType = DateTimeOffset), @p13='?' (Size = 19), @p14='?' (Size = 19), @p15='?' (Size = 84), @p16='?', @p17='?' (DbType = Boolean), @p18='?', @p19='?', @p20='?' (DbType = DateTime), @p21='?' (Size = 32), @p22='?' (DbType = Boolean), @p23='?' (Size = 19)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "CreatedAt" = @p2, "DateOfBirth" = @p3, "DisplayName" = @p4, "Email" = @p5, "EmailConfirmed" = @p6, "FirstName" = @p7, "IsActive" = @p8, "LastLoginAt" = @p9, "LastName" = @p10, "LockoutEnabled" = @p11, "LockoutEnd" = @p12, "NormalizedEmail" = @p13, "NormalizedUserName" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "ProfilePictureUrl" = @p18, "RefreshToken" = @p19, "RefreshTokenExpiryTime" = @p20, "SecurityStamp" = @p21, "TwoFactorEnabled" = @p22, "UserName" = @p23
WHERE "Id" = @p24 AND "ConcurrencyStamp" = @p25
RETURNING 1;
2025-08-19 22:33:40.859 +02:00 [INF] Created admin user
2025-08-19 22:33:40.894 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:40.895 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:40.898 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Int32), @p2='?' (Size = 36), @p3='?' (DbType = DateTime), @p4='?' (DbType = DateTime), @p5='?', @p6='?' (Size = 20), @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTime), @p11='?', @p12='?' (DbType = Boolean), @p13='?' (DbType = DateTimeOffset), @p14='?' (Size = 20), @p15='?' (Size = 20), @p16='?' (Size = 84), @p17='?', @p18='?' (DbType = Boolean), @p19='?', @p20='?', @p21='?' (DbType = DateTime), @p22='?' (Size = 32), @p23='?' (DbType = Boolean), @p24='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "CreatedAt", "DateOfBirth", "DisplayName", "Email", "EmailConfirmed", "FirstName", "IsActive", "LastLoginAt", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "ProfilePictureUrl", "RefreshToken", "RefreshTokenExpiryTime", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24);
2025-08-19 22:33:40.898 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (Size = 19), @p8='?' (DbType = Boolean), @p9='?' (Size = 20), @p10='?', @p11='?', @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "AvatarUrl", "Bio", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Email", "IsAdmin", "Name", "Password", "PaypalEmail", "StripeCustomerId", "UpdatedAt", "UpdatedBy", "Verified")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15)
RETURNING "IsActive", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.899 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:40.900 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."UserId", "a"."RoleId"
FROM "AspNetUserRoles" AS "a"
WHERE "a"."UserId" = @__get_Item_0 AND "a"."RoleId" = @__get_Item_1
LIMIT 1
2025-08-19 22:33:40.900 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:40.900 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:40.900 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:40.901 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
2025-08-19 22:33:40.901 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p24='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 36), @p25='?' (Size = 36), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 20), @p6='?' (DbType = Boolean), @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Boolean), @p12='?' (DbType = DateTimeOffset), @p13='?' (Size = 20), @p14='?' (Size = 20), @p15='?' (Size = 84), @p16='?', @p17='?' (DbType = Boolean), @p18='?', @p19='?', @p20='?' (DbType = DateTime), @p21='?' (Size = 32), @p22='?' (DbType = Boolean), @p23='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "CreatedAt" = @p2, "DateOfBirth" = @p3, "DisplayName" = @p4, "Email" = @p5, "EmailConfirmed" = @p6, "FirstName" = @p7, "IsActive" = @p8, "LastLoginAt" = @p9, "LastName" = @p10, "LockoutEnabled" = @p11, "LockoutEnd" = @p12, "NormalizedEmail" = @p13, "NormalizedUserName" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "ProfilePictureUrl" = @p18, "RefreshToken" = @p19, "RefreshTokenExpiryTime" = @p20, "SecurityStamp" = @p21, "TwoFactorEnabled" = @p22, "UserName" = @p23
WHERE "Id" = @p24 AND "ConcurrencyStamp" = @p25
RETURNING 1;
2025-08-19 22:33:40.936 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 22)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:40.936 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 22)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:40.937 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Int32), @p2='?' (Size = 36), @p3='?' (DbType = DateTime), @p4='?' (DbType = DateTime), @p5='?', @p6='?' (Size = 22), @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTime), @p11='?', @p12='?' (DbType = Boolean), @p13='?' (DbType = DateTimeOffset), @p14='?' (Size = 22), @p15='?' (Size = 22), @p16='?' (Size = 84), @p17='?', @p18='?' (DbType = Boolean), @p19='?', @p20='?', @p21='?' (DbType = DateTime), @p22='?' (Size = 32), @p23='?' (DbType = Boolean), @p24='?' (Size = 22)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "CreatedAt", "DateOfBirth", "DisplayName", "Email", "EmailConfirmed", "FirstName", "IsActive", "LastLoginAt", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "ProfilePictureUrl", "RefreshToken", "RefreshTokenExpiryTime", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24);
2025-08-19 22:33:40.937 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (Size = 52), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (Size = 20), @p8='?' (Size = 8), @p9='?', @p10='?', @p11='?', @p12='?' (DbType = DateTime), @p13='?', @p14='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "AvatarUrl", "Bio", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Email", "Name", "Password", "PaypalEmail", "StripeCustomerId", "UpdatedAt", "UpdatedBy", "Verified")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14)
RETURNING "IsActive", "IsAdmin", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.937 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:40.937 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."UserId", "a"."RoleId"
FROM "AspNetUserRoles" AS "a"
WHERE "a"."UserId" = @__get_Item_0 AND "a"."RoleId" = @__get_Item_1
LIMIT 1
2025-08-19 22:33:40.938 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:40.938 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 22)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:40.938 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 22)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:40.938 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
2025-08-19 22:33:40.938 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p24='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 36), @p25='?' (Size = 36), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 22), @p6='?' (DbType = Boolean), @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Boolean), @p12='?' (DbType = DateTimeOffset), @p13='?' (Size = 22), @p14='?' (Size = 22), @p15='?' (Size = 84), @p16='?', @p17='?' (DbType = Boolean), @p18='?', @p19='?', @p20='?' (DbType = DateTime), @p21='?' (Size = 32), @p22='?' (DbType = Boolean), @p23='?' (Size = 22)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "CreatedAt" = @p2, "DateOfBirth" = @p3, "DisplayName" = @p4, "Email" = @p5, "EmailConfirmed" = @p6, "FirstName" = @p7, "IsActive" = @p8, "LastLoginAt" = @p9, "LastName" = @p10, "LockoutEnabled" = @p11, "LockoutEnd" = @p12, "NormalizedEmail" = @p13, "NormalizedUserName" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "ProfilePictureUrl" = @p18, "RefreshToken" = @p19, "RefreshTokenExpiryTime" = @p20, "SecurityStamp" = @p21, "TwoFactorEnabled" = @p22, "UserName" = @p23
WHERE "Id" = @p24 AND "ConcurrencyStamp" = @p25
RETURNING 1;
2025-08-19 22:33:40.974 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:40.974 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:40.975 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Int32), @p2='?' (Size = 36), @p3='?' (DbType = DateTime), @p4='?' (DbType = DateTime), @p5='?', @p6='?' (Size = 23), @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTime), @p11='?', @p12='?' (DbType = Boolean), @p13='?' (DbType = DateTimeOffset), @p14='?' (Size = 23), @p15='?' (Size = 23), @p16='?' (Size = 84), @p17='?', @p18='?' (DbType = Boolean), @p19='?', @p20='?', @p21='?' (DbType = DateTime), @p22='?' (Size = 32), @p23='?' (DbType = Boolean), @p24='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "CreatedAt", "DateOfBirth", "DisplayName", "Email", "EmailConfirmed", "FirstName", "IsActive", "LastLoginAt", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "ProfilePictureUrl", "RefreshToken", "RefreshTokenExpiryTime", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24);
2025-08-19 22:33:40.975 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (Size = 43), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (Size = 22), @p8='?' (Size = 10), @p9='?', @p10='?', @p11='?', @p12='?' (DbType = DateTime), @p13='?', @p14='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "AvatarUrl", "Bio", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Email", "Name", "Password", "PaypalEmail", "StripeCustomerId", "UpdatedAt", "UpdatedBy", "Verified")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14)
RETURNING "IsActive", "IsAdmin", "IsDeleted", "RowVersion";
2025-08-19 22:33:40.975 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:40.975 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."UserId", "a"."RoleId"
FROM "AspNetUserRoles" AS "a"
WHERE "a"."UserId" = @__get_Item_0 AND "a"."RoleId" = @__get_Item_1
LIMIT 1
2025-08-19 22:33:40.976 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:40.976 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:40.976 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:40.976 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
2025-08-19 22:33:40.976 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p24='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 36), @p25='?' (Size = 36), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 23), @p6='?' (DbType = Boolean), @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Boolean), @p12='?' (DbType = DateTimeOffset), @p13='?' (Size = 23), @p14='?' (Size = 23), @p15='?' (Size = 84), @p16='?', @p17='?' (DbType = Boolean), @p18='?', @p19='?', @p20='?' (DbType = DateTime), @p21='?' (Size = 32), @p22='?' (DbType = Boolean), @p23='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "CreatedAt" = @p2, "DateOfBirth" = @p3, "DisplayName" = @p4, "Email" = @p5, "EmailConfirmed" = @p6, "FirstName" = @p7, "IsActive" = @p8, "LastLoginAt" = @p9, "LastName" = @p10, "LockoutEnabled" = @p11, "LockoutEnd" = @p12, "NormalizedEmail" = @p13, "NormalizedUserName" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "ProfilePictureUrl" = @p18, "RefreshToken" = @p19, "RefreshTokenExpiryTime" = @p20, "SecurityStamp" = @p21, "TwoFactorEnabled" = @p22, "UserName" = @p23
WHERE "Id" = @p24 AND "ConcurrencyStamp" = @p25
RETURNING 1;
2025-08-19 22:33:41.012 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:41.012 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:41.013 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Int32), @p2='?' (Size = 36), @p3='?' (DbType = DateTime), @p4='?' (DbType = DateTime), @p5='?', @p6='?' (Size = 23), @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTime), @p11='?', @p12='?' (DbType = Boolean), @p13='?' (DbType = DateTimeOffset), @p14='?' (Size = 23), @p15='?' (Size = 23), @p16='?' (Size = 84), @p17='?', @p18='?' (DbType = Boolean), @p19='?', @p20='?', @p21='?' (DbType = DateTime), @p22='?' (Size = 32), @p23='?' (DbType = Boolean), @p24='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "CreatedAt", "DateOfBirth", "DisplayName", "Email", "EmailConfirmed", "FirstName", "IsActive", "LastLoginAt", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "ProfilePictureUrl", "RefreshToken", "RefreshTokenExpiryTime", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24);
2025-08-19 22:33:41.013 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (Size = 30), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (Size = 23), @p8='?' (Size = 11), @p9='?', @p10='?', @p11='?', @p12='?' (DbType = DateTime), @p13='?', @p14='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "AvatarUrl", "Bio", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Email", "Name", "Password", "PaypalEmail", "StripeCustomerId", "UpdatedAt", "UpdatedBy", "Verified")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14)
RETURNING "IsActive", "IsAdmin", "IsDeleted", "RowVersion";
2025-08-19 22:33:41.014 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:41.014 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."UserId", "a"."RoleId"
FROM "AspNetUserRoles" AS "a"
WHERE "a"."UserId" = @__get_Item_0 AND "a"."RoleId" = @__get_Item_1
LIMIT 1
2025-08-19 22:33:41.014 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:41.014 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:41.014 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:41.015 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
2025-08-19 22:33:41.015 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p24='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 36), @p25='?' (Size = 36), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 23), @p6='?' (DbType = Boolean), @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Boolean), @p12='?' (DbType = DateTimeOffset), @p13='?' (Size = 23), @p14='?' (Size = 23), @p15='?' (Size = 84), @p16='?', @p17='?' (DbType = Boolean), @p18='?', @p19='?', @p20='?' (DbType = DateTime), @p21='?' (Size = 32), @p22='?' (DbType = Boolean), @p23='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "CreatedAt" = @p2, "DateOfBirth" = @p3, "DisplayName" = @p4, "Email" = @p5, "EmailConfirmed" = @p6, "FirstName" = @p7, "IsActive" = @p8, "LastLoginAt" = @p9, "LastName" = @p10, "LockoutEnabled" = @p11, "LockoutEnd" = @p12, "NormalizedEmail" = @p13, "NormalizedUserName" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "ProfilePictureUrl" = @p18, "RefreshToken" = @p19, "RefreshTokenExpiryTime" = @p20, "SecurityStamp" = @p21, "TwoFactorEnabled" = @p22, "UserName" = @p23
WHERE "Id" = @p24 AND "ConcurrencyStamp" = @p25
RETURNING 1;
2025-08-19 22:33:41.050 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 24)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:41.050 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 24)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:41.051 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Int32), @p2='?' (Size = 36), @p3='?' (DbType = DateTime), @p4='?' (DbType = DateTime), @p5='?', @p6='?' (Size = 24), @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTime), @p11='?', @p12='?' (DbType = Boolean), @p13='?' (DbType = DateTimeOffset), @p14='?' (Size = 24), @p15='?' (Size = 24), @p16='?' (Size = 84), @p17='?', @p18='?' (DbType = Boolean), @p19='?', @p20='?', @p21='?' (DbType = DateTime), @p22='?' (Size = 32), @p23='?' (DbType = Boolean), @p24='?' (Size = 24)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "CreatedAt", "DateOfBirth", "DisplayName", "Email", "EmailConfirmed", "FirstName", "IsActive", "LastLoginAt", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "ProfilePictureUrl", "RefreshToken", "RefreshTokenExpiryTime", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24);
2025-08-19 22:33:41.051 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (Size = 37), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (Size = 23), @p8='?' (Size = 11), @p9='?', @p10='?', @p11='?', @p12='?' (DbType = DateTime), @p13='?', @p14='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "AvatarUrl", "Bio", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Email", "Name", "Password", "PaypalEmail", "StripeCustomerId", "UpdatedAt", "UpdatedBy", "Verified")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14)
RETURNING "IsActive", "IsAdmin", "IsDeleted", "RowVersion";
2025-08-19 22:33:41.052 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:41.052 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."UserId", "a"."RoleId"
FROM "AspNetUserRoles" AS "a"
WHERE "a"."UserId" = @__get_Item_0 AND "a"."RoleId" = @__get_Item_1
LIMIT 1
2025-08-19 22:33:41.052 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedRoleName_0='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-08-19 22:33:41.052 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 24)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2025-08-19 22:33:41.052 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 24)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."ConcurrencyStamp", "a"."CreatedAt", "a"."DateOfBirth", "a"."DisplayName", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."IsActive", "a"."LastLoginAt", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."ProfilePictureUrl", "a"."RefreshToken", "a"."RefreshTokenExpiryTime", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-19 22:33:41.053 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
2025-08-19 22:33:41.053 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p24='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 36), @p25='?' (Size = 36), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (Size = 24), @p6='?' (DbType = Boolean), @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Boolean), @p12='?' (DbType = DateTimeOffset), @p13='?' (Size = 24), @p14='?' (Size = 24), @p15='?' (Size = 84), @p16='?', @p17='?' (DbType = Boolean), @p18='?', @p19='?', @p20='?' (DbType = DateTime), @p21='?' (Size = 32), @p22='?' (DbType = Boolean), @p23='?' (Size = 24)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "CreatedAt" = @p2, "DateOfBirth" = @p3, "DisplayName" = @p4, "Email" = @p5, "EmailConfirmed" = @p6, "FirstName" = @p7, "IsActive" = @p8, "LastLoginAt" = @p9, "LastName" = @p10, "LockoutEnabled" = @p11, "LockoutEnd" = @p12, "NormalizedEmail" = @p13, "NormalizedUserName" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "ProfilePictureUrl" = @p18, "RefreshToken" = @p19, "RefreshTokenExpiryTime" = @p20, "SecurityStamp" = @p21, "TwoFactorEnabled" = @p22, "UserName" = @p23
WHERE "Id" = @p24 AND "ConcurrencyStamp" = @p25
RETURNING 1;
2025-08-19 22:33:41.053 +02:00 [INF] Seeded 6 test users
2025-08-19 22:33:41.055 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "PlatformSettings" AS "p"
    WHERE NOT ("p"."IsDeleted"))
2025-08-19 22:33:41.063 +02:00 [INF] Seeded platform settings
2025-08-19 22:33:41.066 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Items" AS "i"
    WHERE NOT ("i"."IsDeleted"))
2025-08-19 22:33:41.068 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."CreatedAt", "c"."CreatedBy", "c"."DeletedAt", "c"."DeletedBy", "c"."Description", "c"."Icon", "c"."IconUrl", "c"."IsActive", "c"."IsDeleted", "c"."Name", "c"."RowVersion", "c"."Slug", "c"."UpdatedAt", "c"."UpdatedBy"
FROM "Categories" AS "c"
WHERE NOT ("c"."IsDeleted")
2025-08-19 22:33:41.069 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."AvatarUrl", "u"."Bio", "u"."CreatedAt", "u"."CreatedBy", "u"."DeletedAt", "u"."DeletedBy", "u"."Email", "u"."IsActive", "u"."IsAdmin", "u"."IsDeleted", "u"."Name", "u"."Password", "u"."PaypalEmail", "u"."RowVersion", "u"."StripeCustomerId", "u"."UpdatedAt", "u"."UpdatedBy", "u"."Verified"
FROM "Users" AS "u"
WHERE NOT ("u"."IsDeleted") AND NOT ("u"."IsAdmin")
2025-08-19 22:33:41.091 +02:00 [INF] Seeded 7 sample items
2025-08-19 22:33:41.094 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Rentals" AS "r"
    WHERE NOT ("r"."IsDeleted"))
2025-08-19 22:33:41.108 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "i"."Id", "i"."Available", "i"."CategoryId", "i"."Condition", "i"."CreatedAt", "i"."CreatedBy", "i"."DeletedAt", "i"."DeletedBy", "i"."DeliveryAvailable", "i"."DeliveryDetails", "i"."DeliveryFee", "i"."DeliveryRadius", "i"."Deposit", "i"."Description", "i"."IsActive", "i"."IsDeleted", "i"."Latitude", "i"."Location", "i"."Longitude", "i"."PickupAvailable", "i"."PricePerDay", "i"."PricePerHour", "i"."RowVersion", "i"."Title", "i"."UpdatedAt", "i"."UpdatedBy", "i"."UserId", "t"."Id", "t"."AvatarUrl", "t"."Bio", "t"."CreatedAt", "t"."CreatedBy", "t"."DeletedAt", "t"."DeletedBy", "t"."Email", "t"."IsActive", "t"."IsAdmin", "t"."IsDeleted", "t"."Name", "t"."Password", "t"."PaypalEmail", "t"."RowVersion", "t"."StripeCustomerId", "t"."UpdatedAt", "t"."UpdatedBy", "t"."Verified"
FROM "Items" AS "i"
INNER JOIN (
    SELECT "u"."Id", "u"."AvatarUrl", "u"."Bio", "u"."CreatedAt", "u"."CreatedBy", "u"."DeletedAt", "u"."DeletedBy", "u"."Email", "u"."IsActive", "u"."IsAdmin", "u"."IsDeleted", "u"."Name", "u"."Password", "u"."PaypalEmail", "u"."RowVersion", "u"."StripeCustomerId", "u"."UpdatedAt", "u"."UpdatedBy", "u"."Verified"
    FROM "Users" AS "u"
    WHERE NOT ("u"."IsDeleted")
) AS "t" ON "i"."UserId" = "t"."Id"
WHERE NOT ("i"."IsDeleted")
2025-08-19 22:33:41.108 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."AvatarUrl", "u"."Bio", "u"."CreatedAt", "u"."CreatedBy", "u"."DeletedAt", "u"."DeletedBy", "u"."Email", "u"."IsActive", "u"."IsAdmin", "u"."IsDeleted", "u"."Name", "u"."Password", "u"."PaypalEmail", "u"."RowVersion", "u"."StripeCustomerId", "u"."UpdatedAt", "u"."UpdatedBy", "u"."Verified"
FROM "Users" AS "u"
WHERE NOT ("u"."IsDeleted") AND NOT ("u"."IsAdmin")
2025-08-19 22:33:41.108 +02:00 [WRN] Cannot seed rentals: insufficient items or users
2025-08-19 22:33:41.118 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 8), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Decimal), @p10='?' (DbType = Double), @p11='?' (DbType = Decimal), @p12='?' (Size = 77), @p13='?' (DbType = Double), @p14='?' (Size = 25), @p15='?' (DbType = Double), @p16='?' (DbType = Decimal), @p17='?' (DbType = Decimal), @p18='?' (Size = 28), @p19='?' (DbType = DateTime), @p20='?', @p21='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Items" ("Id", "CategoryId", "Condition", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "DeliveryAvailable", "DeliveryDetails", "DeliveryFee", "DeliveryRadius", "Deposit", "Description", "Latitude", "Location", "Longitude", "PricePerDay", "PricePerHour", "Title", "UpdatedAt", "UpdatedBy", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21)
RETURNING "Available", "IsActive", "IsDeleted", "PickupAvailable", "RowVersion";
2025-08-19 22:33:41.118 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 8), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Decimal), @p10='?' (DbType = Double), @p11='?' (DbType = Decimal), @p12='?' (Size = 84), @p13='?' (DbType = Double), @p14='?' (Size = 25), @p15='?' (DbType = Double), @p16='?' (DbType = Decimal), @p17='?' (DbType = Decimal), @p18='?' (Size = 28), @p19='?' (DbType = DateTime), @p20='?', @p21='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Items" ("Id", "CategoryId", "Condition", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "DeliveryAvailable", "DeliveryDetails", "DeliveryFee", "DeliveryRadius", "Deposit", "Description", "Latitude", "Location", "Longitude", "PricePerDay", "PricePerHour", "Title", "UpdatedAt", "UpdatedBy", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21)
RETURNING "Available", "IsActive", "IsDeleted", "PickupAvailable", "RowVersion";
2025-08-19 22:33:41.119 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 3), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Decimal), @p10='?' (DbType = Double), @p11='?' (DbType = Decimal), @p12='?' (Size = 73), @p13='?' (DbType = Double), @p14='?' (Size = 14), @p15='?' (DbType = Double), @p16='?' (DbType = Decimal), @p17='?' (DbType = Decimal), @p18='?' (Size = 31), @p19='?' (DbType = DateTime), @p20='?', @p21='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Items" ("Id", "CategoryId", "Condition", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "DeliveryAvailable", "DeliveryDetails", "DeliveryFee", "DeliveryRadius", "Deposit", "Description", "Latitude", "Location", "Longitude", "PricePerDay", "PricePerHour", "Title", "UpdatedAt", "UpdatedBy", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21)
RETURNING "Available", "IsActive", "IsDeleted", "PickupAvailable", "RowVersion";
2025-08-19 22:33:41.119 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 8), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Decimal), @p10='?' (DbType = Double), @p11='?' (DbType = Decimal), @p12='?' (Size = 88), @p13='?' (DbType = Double), @p14='?' (Size = 15), @p15='?' (DbType = Double), @p16='?' (DbType = Decimal), @p17='?' (DbType = Decimal), @p18='?' (Size = 19), @p19='?' (DbType = DateTime), @p20='?', @p21='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Items" ("Id", "CategoryId", "Condition", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "DeliveryAvailable", "DeliveryDetails", "DeliveryFee", "DeliveryRadius", "Deposit", "Description", "Latitude", "Location", "Longitude", "PricePerDay", "PricePerHour", "Title", "UpdatedAt", "UpdatedBy", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21)
RETURNING "Available", "IsActive", "IsDeleted", "PickupAvailable", "RowVersion";
2025-08-19 22:33:41.119 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 8), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Boolean), @p8='?', @p9='?' (DbType = Decimal), @p10='?' (DbType = Double), @p11='?' (DbType = Decimal), @p12='?' (Size = 80), @p13='?' (DbType = Double), @p14='?' (Size = 28), @p15='?' (DbType = Double), @p16='?' (DbType = Decimal), @p17='?' (DbType = Decimal), @p18='?' (Size = 21), @p19='?' (DbType = DateTime), @p20='?', @p21='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Items" ("Id", "CategoryId", "Condition", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "DeliveryAvailable", "DeliveryDetails", "DeliveryFee", "DeliveryRadius", "Deposit", "Description", "Latitude", "Location", "Longitude", "PricePerDay", "PricePerHour", "Title", "UpdatedAt", "UpdatedBy", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21)
RETURNING "Available", "IsActive", "IsDeleted", "PickupAvailable", "RowVersion";
2025-08-19 22:33:41.119 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 8), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?' (DbType = Decimal), @p9='?' (DbType = Double), @p10='?' (DbType = Decimal), @p11='?' (Size = 77), @p12='?' (DbType = Double), @p13='?' (Size = 16), @p14='?' (DbType = Double), @p15='?' (DbType = Decimal), @p16='?' (DbType = Decimal), @p17='?' (Size = 18), @p18='?' (DbType = DateTime), @p19='?', @p20='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Items" ("Id", "CategoryId", "Condition", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "DeliveryDetails", "DeliveryFee", "DeliveryRadius", "Deposit", "Description", "Latitude", "Location", "Longitude", "PricePerDay", "PricePerHour", "Title", "UpdatedAt", "UpdatedBy", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20)
RETURNING "Available", "DeliveryAvailable", "IsActive", "IsDeleted", "PickupAvailable", "RowVersion";
2025-08-19 22:33:41.119 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 3), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?' (DbType = Decimal), @p9='?' (DbType = Double), @p10='?' (DbType = Decimal), @p11='?' (Size = 82), @p12='?' (DbType = Double), @p13='?' (Size = 16), @p14='?' (DbType = Double), @p15='?' (DbType = Decimal), @p16='?' (DbType = Decimal), @p17='?' (Size = 32), @p18='?' (DbType = DateTime), @p19='?', @p20='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Items" ("Id", "CategoryId", "Condition", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "DeliveryDetails", "DeliveryFee", "DeliveryRadius", "Deposit", "Description", "Latitude", "Location", "Longitude", "PricePerDay", "PricePerHour", "Title", "UpdatedAt", "UpdatedBy", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20)
RETURNING "Available", "DeliveryAvailable", "IsActive", "IsDeleted", "PickupAvailable", "RowVersion";
2025-08-19 22:33:41.119 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = Boolean), @p6='?' (DbType = Boolean), @p7='?', @p8='?', @p9='?' (Size = 7), @p10='?' (DbType = Decimal), @p11='?', @p12='?', @p13='?', @p14='?' (DbType = DateTime), @p15='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "PlatformSettings" ("Id", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "IsActive", "IsDeleted", "PaypalClientId", "PaypalClientSecret", "PaypalMode", "PlatformFeePercentage", "StripePublishableKey", "StripeSecretKey", "StripeWebhookSecret", "UpdatedAt", "UpdatedBy")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15)
RETURNING "RowVersion";
2025-08-19 22:33:41.119 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (Size = 36), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (Size = 24), @p8='?' (Size = 12), @p9='?', @p10='?', @p11='?', @p12='?' (DbType = DateTime), @p13='?', @p14='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "AvatarUrl", "Bio", "CreatedAt", "CreatedBy", "DeletedAt", "DeletedBy", "Email", "Name", "Password", "PaypalEmail", "StripeCustomerId", "UpdatedAt", "UpdatedBy", "Verified")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14)
RETURNING "IsActive", "IsAdmin", "IsDeleted", "RowVersion";
2025-08-19 22:33:41.121 +02:00 [INF] Database seeding completed successfully
2025-08-19 22:33:41.121 +02:00 [INF] Database seeding service completed successfully
2025-08-19 22:33:41.134 +02:00 [INF] Now listening on: http://localhost:5000
2025-08-19 22:33:41.134 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-19 22:33:41.134 +02:00 [INF] Hosting environment: Development
2025-08-19 22:33:41.134 +02:00 [INF] Content root path: /Users/michaelnikolaus/RiderProjects/dorfkiste/blazor-dorfkiste/src/DorfkisteBlazor.Server
