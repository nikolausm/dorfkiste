# DorfkisteBlazor - Docker Compose Configuration
# Infrastructure & DevOps Agent - Production Ready Setup
version: '3.8'

services:
  # ==================================================
  # Main Application Service
  # ==================================================
  dorfkiste-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    image: dorfkiste-blazor:latest
    container_name: dorfkiste-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - DOTNET_RUNNING_IN_CONTAINER=true
      # Database Configuration
      - SQL_SERVER=${SQL_SERVER:-sqlserver}
      - SQL_DATABASE=${SQL_DATABASE:-DorfkisteBlazor}
      - SQL_USER=${SQL_USER:-sa}
      - SQL_PASSWORD=${SQL_PASSWORD:-YourStrong@Passw0rd}
      # Redis Configuration
      - REDIS_CONNECTION_STRING=${REDIS_CONNECTION_STRING:-redis:6379}
      # External Services
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
      - BASE_URL=${BASE_URL:-http://localhost:5000}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
    volumes:
      - app-logs:/app/logs
      - app-uploads:/app/uploads
      - dorfkiste-logs:/var/log/dorfkiste
    networks:
      - dorfkiste-network
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ==================================================
  # SQL Server Database
  # ==================================================
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: dorfkiste-sqlserver
    restart: unless-stopped
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_PASSWORD:-YourStrong@Passw0rd}
      - MSSQL_DB=${SQL_DATABASE:-DorfkisteBlazor}
    volumes:
      - sqlserver-data:/var/opt/mssql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - dorfkiste-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $$SA_PASSWORD -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # ==================================================
  # Redis Cache
  # ==================================================
  redis:
    image: redis:7-alpine
    container_name: dorfkiste-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
    networks:
      - dorfkiste-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==================================================
  # Nginx Reverse Proxy (Optional)
  # ==================================================
  nginx:
    image: nginx:alpine
    container_name: dorfkiste-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - app-uploads:/var/www/uploads:ro
    networks:
      - dorfkiste-network
    depends_on:
      - dorfkiste-app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# ==================================================
# Network Configuration
# ==================================================
networks:
  dorfkiste-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ==================================================
# Volume Configuration
# ==================================================
volumes:
  sqlserver-data:
    driver: local
    name: dorfkiste-sqlserver-data
  redis-data:
    driver: local
    name: dorfkiste-redis-data
  app-logs:
    driver: local
    name: dorfkiste-app-logs
  app-uploads:
    driver: local
    name: dorfkiste-app-uploads
  dorfkiste-logs:
    driver: local
    name: dorfkiste-system-logs