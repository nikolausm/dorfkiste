{
  "name": "dorfkiste",
  "version": "0.1.0",
  "description": "Die Nachbarschafts-Verleihplattform - Teilen wie im Dorf",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "build:analyze": "ANALYZE=true next build",
    "build:docker": "docker build -f Dockerfile.prod -t dorfkiste:latest .",
    "build:docker-dev": "docker build -f Dockerfile.dev -t dorfkiste:dev .",
    "start": "next start",
    "start:prod": "NODE_ENV=production next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:security": "npm audit --audit-level high && echo 'Security audit passed'",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:migrate:prod": "prisma migrate deploy",
    "prisma:studio": "prisma studio",
    "prisma:seed": "ts-node-dev --transpile-only --respawn --ignore-watch node_modules prisma/seed.ts",
    "prisma:reset": "prisma migrate reset --force",
    "prisma:validate": "prisma validate",
    "setup:background": "node scripts/setup-background-services.js",
    "setup:dev": "npm install && npm run prisma:generate && npm run prisma:migrate && npm run prisma:seed",
    "setup:prod": "npm ci && npm run prisma:generate && npm run prisma:migrate:prod",
    "services:health": "curl -s http://localhost:3000/api/health | jq",
    "services:monitoring": "curl -s http://localhost:3000/api/monitoring | jq",
    "redis:start": "redis-server --daemonize yes",
    "redis:stop": "redis-cli shutdown",
    "redis:status": "redis-cli ping",
    "docker:up": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:down": "docker-compose -f docker-compose.prod.yml down",
    "docker:logs": "docker-compose -f docker-compose.prod.yml logs -f",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:dev-down": "docker-compose -f docker-compose.dev.yml down",
    "performance:optimize": "tsx scripts/performance-optimization.ts",
    "performance:bundle": "tsx scripts/performance-optimization.ts --bundle",
    "performance:images": "tsx scripts/performance-optimization.ts --images",
    "performance:cache": "tsx scripts/performance-optimization.ts --cache",
    "performance:database": "tsx scripts/performance-optimization.ts --database",
    "performance:cdn": "tsx scripts/performance-optimization.ts --cdn",
    "performance:audit": "lighthouse http://localhost:3000 --output html --output-path ./lighthouse-report.html",
    "db:backup": "pg_dump $DATABASE_URL > backup-$(date +%Y%m%d_%H%M%S).sql",
    "db:restore": "psql $DATABASE_URL < $1",
    "db:optimize": "psql $DATABASE_URL -f scripts/database-optimization.sql",
    "monitoring:start": "docker-compose -f docker-compose.prod.yml up -d prometheus grafana",
    "monitoring:stop": "docker-compose -f docker-compose.prod.yml stop prometheus grafana",
    "security:scan": "npm audit && echo 'Running additional security checks...'",
    "security:headers": "curl -I http://localhost:3000 | grep -E '(X-|Strict|Content-Security)'",
    "deploy:staging": "echo 'Deploying to staging...' && npm run build && npm run test && echo 'Staging deployment complete'",
    "deploy:production": "echo 'Deploying to production...' && npm run build && npm run test:e2e && echo 'Production deployment complete'",
    "logs:app": "tail -f logs/app.log",
    "logs:error": "tail -f logs/error.log",
    "logs:access": "tail -f logs/access.log",
    "clean": "rm -rf .next node_modules/.cache",
    "clean:all": "rm -rf .next node_modules package-lock.json && npm install",
    "precommit": "lint-staged",
    "prepare": "husky install"
  },
  "prisma": {
    "seed": "ts-node --transpile-only prisma/seed.ts"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.10.0",
    "@hookform/resolvers": "^5.2.0",
    "@prisma/client": "^5.18.0",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-toast": "^1.2.14",
    "@stripe/react-stripe-js": "^3.8.0",
    "@stripe/stripe-js": "^7.6.1",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/supabase-js": "^2.44.0",
    "@types/redis": "^4.0.10",
    "@types/winston": "^2.4.4",
    "axios": "^1.11.0",
    "bcryptjs": "^3.0.2",
    "clsx": "^2.1.0",
    "date-fns": "^4.1.0",
    "express-rate-limit": "^7.4.1",
    "helmet": "^8.0.0",
    "isomorphic-dompurify": "^2.26.0",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.400.0",
    "next": "^15.5.2",
    "next-auth": "^5.0.0-beta.29",
    "node-cron": "^3.0.3",
    "rate-limiter-flexible": "^5.0.5",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.61.1",
    "redis": "^5.6.1",
    "resend": "^4.7.0",
    "sharp": "^0.33.0",
    "socket.io": "^4.8.1",
    "stripe": "^18.3.0",
    "swr": "^2.3.4",
    "tailwindcss": "^3.4.0",
    "typescript": "^5.5.0",
    "unsplash-js": "^7.0.19",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "zod": "^4.0.10"
  },
  "devDependencies": {
    "@next/bundle-analyzer": "^15.4.4",
    "@playwright/test": "^1.54.1",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/node": "^20.14.0",
    "@types/node-cron": "^3.0.11",
    "@types/react": "^18.3.0",
    "@types/react-dom": "^18.3.0",
    "autoprefixer": "^10.4.0",
    "eslint": "^8.57.0",
    "eslint-config-next": "14.2.0",
    "husky": "^9.0.11",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.0.5",
    "lighthouse": "^12.0.0",
    "lint-staged": "^15.2.10",
    "postcss": "^8.4.0",
    "prettier": "^3.3.3",
    "prisma": "^5.18.0",
    "socket.io-client": "^4.8.1",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.2"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}
